p <- plot_classif(res, facets = "island", fill = "coral")
plot_grid(p, plot_grid(blank, confplot, blank, nrow = 3), ncol = 2, rel_widths = c(2, 1))
ggsave("analyses/04-machine-learning/plots/classif_lda_pca.png", height = 6, width = 9, dpi = 300)
t2 <- res$mean
t2_fname <- sprintf(fname, "lda_pca")
save_table(t2, t2_fname, digits = c(0, 3, 0, 1, 0, 4, 0), col.names = colnames)
res$imp %>%
gather_("variable", "importance", variables) %>%
filter(island %in% c("Abaco", "Bimini", "Cayman Brac", "Little Cayman", "Long Island")) %>%
ggplot(aes(x = variable, y = importance)) +
geom_boxplot() +
theme_bw() +
labs(x = NULL, y = "Relative importance") +
facet_wrap(. ~ island) +
geom_hline(yintercept = 0.25, lty = 2)
ggsave("analyses/04-machine-learning/plots/importance_lda_pca.png", height = 4, width = 5, dpi = 300)
# Reflectance data
# SVM-classification on reflectance
variables <- paste0("wl", seq(300, 700, 50))
res <- classify(
data, variables, grouping = "habitat", nesting = "island", digest = TRUE, test = TRUE, k = 5,
nrep = 100, seed = 24, method = "SVM", importance = TRUE
)
p <- plot_classif(res, facets = "island")
plot_grid(p, plot_grid(blank, confplot, blank, nrow = 3), ncol = 2, rel_widths = c(2, 1))
ggsave("analyses/04-machine-learning/plots/classif_svm_refl.png", height = 6, width = 9, dpi = 300)
t3 <- res$mean
t3_fname <- sprintf(fname, "svm_refl")
save_table(t3, t3_fname, digits = c(0, 3, 0, 1, 0, 4, 0), col.names = colnames)
res$imp %>%
gather_("variable", "importance", variables) %>%
mutate(variable = variable %>% str_replace("wl", "")) %>%
filter(island %in% c("Abaco", "Bimini", "Cayman Brac", "Little Cayman", "Long Island")) %>%
ggplot(aes(x = variable, y = importance)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(x = "Wavelength (nm)", y = "Relative importance") +
facet_wrap(. ~ island) +
geom_hline(yintercept = 1/length(variables), lty = 2)
ggsave("analyses/04-machine-learning/plots/importance_svm_refl.png", height = 4, width = 5, dpi = 300)
# LDA-classification on reflectance
res <- classify(
data, variables, grouping = "habitat", nesting = "island", digest = TRUE, test = TRUE, k = 5,
nrep = 100, seed = 24, method = "LDA", importance = TRUE
)
p <- plot_classif(res, facets = "island", fill = "coral")
plot_grid(p, plot_grid(blank, confplot, blank, nrow = 3), ncol = 2, rel_widths = c(2, 1))
ggsave("analyses/04-machine-learning/plots/classif_lda_refl.png", height = 6, width = 9, dpi = 300)
t4 <- res$mean
t4_fname <- sprintf(fname, "lda_refl")
save_table(t4, t4_fname, digits = c(0, 3, 0, 1, 0, 4, 0), col.names = colnames)
res$imp %>%
gather_("variable", "importance", variables) %>%
mutate(variable = variable %>% str_replace("wl", "")) %>%
filter(island %in% c("Abaco", "Bimini", "Cayman Brac", "Little Cayman", "Long Island")) %>%
ggplot(aes(x = variable, y = importance)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(x = "Wavelength (nm)", y = "Relative importance") +
facet_wrap(. ~ island) +
geom_hline(yintercept = 1/length(variables), lty = 2)
ggsave("analyses/04-machine-learning/plots/importance_lda_refl.png", height = 4, width = 5, dpi = 300)
#### Pooling the islands together ####
# Principal components
variables <- paste0("PC", 1:4)
# SVM-classification of PCs
res <- classify(
data, variables, grouping = "habitat",
to_pcomp = paste0("wl", 300:400), digest = TRUE, test = TRUE, k = 5,
nrep = 100, seed = 24, method = "SVM", importance = TRUE
)
p <- plot_classif(res, bins = 50, ylim = c(0, 100), dfac = 1000, py = 90, add_insets = FALSE)
confplot <- plot_classif(res, type = "confusion") +
labs(x = "True habitat", y = "Predicted habitat", fill = "Frequency") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
plot_grid(p, plot_grid(blank, confplot, blank, nrow = 3, rel_heights = c(1, 3, 1)), ncol = 2, rel_widths = c(1.1, 1))
ggsave("analyses/04-machine-learning/plots/classif_svm_pca_pooled.png", height = 3, width = 6, dpi = 300)
t5 <- res$mean
t5_fname <- sprintf(fname, "svm_pca_pooled")
save_table(t5, t5_fname, digits = c(0, 3, 0, 1, 0, 4, 0), col.names = colnames)
res$imp %>%
gather_("variable", "importance", variables) %>%
ggplot(aes(x = variable, y = importance)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(x = "Wavelength (nm)", y = "Relative importance") +
geom_hline(yintercept = 1/length(variables), lty = 2)
ggsave("analyses/04-machine-learning/plots/importance_svm_pca_pooled.png", height = 3, width = 3, dpi = 300)
# LDA-classification on PCs
res <- classify(
data, variables, grouping = "habitat",
to_pcomp = paste0("wl", 300:400), digest = TRUE, test = TRUE, k = 5,
nrep = 100, seed = 24, method = "LDA", importance = TRUE
)
p <- plot_classif(res, bins = 50, ylim = c(0, 100), dfac = 1000, py = 90, add_insets = FALSE, fill = "coral")
confplot <- plot_classif(res, type = "confusion") +
labs(x = "True habitat", y = "Predicted habitat", fill = "Frequency") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
plot_grid(p, plot_grid(blank, confplot, blank, nrow = 3, rel_heights = c(1, 3, 1)), ncol = 2, rel_widths = c(1.1, 1))
ggsave("analyses/04-machine-learning/plots/classif_lda_pca_pooled.png", height = 3, width = 6, dpi = 300)
t6 <- res$mean
t6_fname <- sprintf(fname, "lda_pca_pooled")
save_table(t6, t6_fname, digits = c(0, 3, 0, 1, 0, 4, 0), col.names = colnames)
res$imp %>%
gather_("variable", "importance", variables) %>%
ggplot(aes(x = variable, y = importance)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(x = "Wavelength (nm)", y = "Relative importance") +
geom_hline(yintercept = 1/length(variables), lty = 2)
ggsave("analyses/04-machine-learning/plots/importance_lda_pca_pooled.png", height = 3, width = 3, dpi = 300)
# Reflectance data
variables <- paste0("wl", seq(300, 700, 50))
# SVM-classification on reflectance
res <- classify(
data, variables, grouping = "habitat", digest = TRUE, test = TRUE, k = 5,
nrep = 100, seed = 24, method = "SVM", importance = TRUE
)
p <- plot_classif(res, bins = 50, ylim = c(0, 100), dfac = 1000, py = 90, add_insets = FALSE)
confplot <- plot_classif(res, type = "confusion") +
labs(x = "True habitat", y = "Predicted habitat", fill = "Frequency") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
plot_grid(p, plot_grid(blank, confplot, blank, nrow = 3, rel_heights = c(1, 3, 1)), ncol = 2, rel_widths = c(1.1, 1))
ggsave("analyses/04-machine-learning/plots/classif_svm_refl_pooled.png", height = 3, width = 6, dpi = 300)
t7 <- res$mean
t7_fname <- sprintf(fname, "svm_refl_pooled")
save_table(t7, t7_fname, digits = c(0, 3, 0, 1, 0, 4, 0), col.names = colnames)
res$imp %>%
gather_("variable", "importance", variables) %>%
mutate(variable = variable %>% str_replace("wl", "")) %>%
ggplot(aes(x = variable, y = importance)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(x = "Wavelength (nm)", y = "Relative importance") +
geom_hline(yintercept = 1/length(variables), lty = 2)
ggsave("analyses/04-machine-learning/plots/importance_svm_refl_pooled.png", height = 4, width = 5, dpi = 300)
# LDA-classification on reflectance
res <- classify(
data, variables, grouping = "habitat", digest = TRUE, test = TRUE, k = 5,
nrep = 100, seed = 24, method = "LDA", importance = TRUE
)
p <- plot_classif(res, bins = 50, ylim = c(0, 100), dfac = 1000, py = 90, add_insets = FALSE, fill = "coral")
confplot <- plot_classif(res, type = "confusion") +
labs(x = "True habitat", y = "Predicted habitat", fill = "Frequency") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
plot_grid(p, plot_grid(blank, confplot, blank, nrow = 3, rel_heights = c(1, 3, 1)), ncol = 2, rel_widths = c(1.1, 1))
ggsave("analyses/04-machine-learning/plots/classif_lda_refl_pooled.png", height = 3, width = 6, dpi = 300)
t8 <- res$mean
t8_fname <- sprintf(fname, "lda_refl_pooled")
save_table(t8, t8_fname, digits = c(0, 3, 0, 1, 0, 4, 0), col.names = colnames)
res$imp %>%
gather_("variable", "importance", variables) %>%
mutate(variable = variable %>% str_replace("wl", "")) %>%
ggplot(aes(x = variable, y = importance)) +
geom_boxplot() +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
labs(x = "Wavelength (nm)", y = "Relative importance") +
geom_hline(yintercept = 1/length(variables), lty = 2)
ggsave("analyses/04-machine-learning/plots/importance_lda_refl_pooled.png", height = 4, width = 5, dpi = 300)
rm(list = ls())
library(dewlap)
rm(list = ls())
library(dewlap)
library(nmgc)
library(tidyverse)
library(cowplot)
data <- read.csv("data/reflectance.csv", header = TRUE)
variables <- paste0("PC", 1:4)
res <- classify(
data, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), digest = TRUE, test = TRUE, k = 5,
nrep = 100, seed = 24, method = "SVM", importance = TRUE
)
library(nmgc)
library(dewlap)
library(tidyverse)
library(cowplot)
res <- classify(
data, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), digest = TRUE, test = TRUE, k = 5,
nrep = 100, seed = 24, method = "SVM", importance = TRUE
)
library(dewlap)
library(nmgc)
library(tidyverse)
library(cowplot)
res <- classify(
data, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), digest = TRUE, test = TRUE, k = 5,
nrep = 100, seed = 24, method = "SVM", importance = TRUE
)
res <- classify(
data, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), digest = TRUE, test = TRUE, k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
res
classify2(
data, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
library(nmgc)
classify2(
data, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
library(dewlap)
library(tidyverse)
library(cowplot)
classify2(
data, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
rm(list = ls())
library(dewlap)
library(nmgc)
library(tidyverse)
library(cowplot)
data <- read.csv("data/reflectance.csv", header = TRUE)
variables <- paste0("PC", 1:4)
res <- classify(
data, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), digest = TRUE, test = TRUE, k = 5,
nrep = 100, seed = 24, method = "SVM", importance = TRUE
)
# Make sure that this script works with the new output of the classify function
# before changing the package further
classify2(
data, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
# Can we try classify2 on made-up data?
data
# Can we try classify2 on made-up data?
data %>%
group_by(island)
# Can we try classify2 on made-up data?
data %>%
group_by(island) %>%
nest()
# Can we try classify2 on made-up data?
data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x))
# Can we try classify2 on made-up data?
data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x[seq(n())]))
# Can we try classify2 on made-up data?
data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x[seq(n()),]))
# Can we try classify2 on made-up data?
data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x[seq(nrow(.x)),]))
nrow(data)
seq(nrow(data))
sample(nrow(data))
# Can we try classify2 on made-up data?
data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x[sample(nrow(.x)),]))
# Can we try classify2 on made-up data?
data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x[sample(nrow(.x)),])) %>%
select(-data) %>%
rename(data = data2)
# Can we try classify2 on made-up data?
data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x[sample(nrow(.x)),])) %>%
select(-data) %>%
rename(data = data2) %>%
unnest() %>%
ungroup()
# Can we try classify2 on made-up data?
data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x[sample(nrow(.x)),])) %>%
select(-data) %>%
rename(data = data2) %>%
unnest(cols = c(data)) %>%
ungroup()
# Can we try classify2 on made-up data?
data2 <- data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x[sample(nrow(.x)),])) %>%
select(-data) %>%
rename(data = data2) %>%
unnest(cols = c(data)) %>%
ungroup()
classify2(
data2, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
data
data2
data.frame(data2)
# Can we try classify2 on made-up data?
data2 <- data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x %>% mutate(id = sample(nrow(.x))))) %>%
select(-data) %>%
rename(data = data2) %>%
unnest(cols = c(data)) %>%
ungroup()
classify2(
data2, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
ata %>%
group_by(island) %>%
nest()
data %>%
group_by(island) %>%
nest()
data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x %>% mutate(id = sample(nrow(.x))))) %>%
data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x %>% mutate(id = sample(nrow(.x)))))
data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x %>% mutate(id = sample(nrow(.x))))) %>%
select(-data)
data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x %>% mutate(id = sample(nrow(.x))))) %>%
select(-data) %>%
#rename(data = data2) %>%
unnest(cols = c(data2)) %>%
ungroup()
# Can we try classify2 on made-up data?
data2 <- data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x %>% mutate(id = sample(nrow(.x))))) %>%
select(-data) %>%
unnest(cols = c(data2)) %>%
ungroup()
classify2(
data2, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
# Can we try classify2 on made-up data?
data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x %>% mutate(id = sample(nrow(.x))))) %>%
select(-data) %>%
unnest(cols = c(data2)) %>%
ungroup()
data2$id
data$id
data$habitat
with(data, id)
with(data2, id)
with(data2, table(id, habitat))
with(data, table(id, habitat))
head(with(data, table(id, habitat)))
head(with(data2, table(id, habitat)))
head(with(data, table(id, habitat)))
# Can we try classify2 on made-up data?
data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x %>% mutate(id = sample(id)))) %>%
select(-data) %>%
unnest(cols = c(data2)) %>%
ungroup()
# Can we try classify2 on made-up data?
data2 <- data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x %>% mutate(id = sample(id)))) %>%
select(-data) %>%
unnest(cols = c(data2)) %>%
ungroup()
head(with(data2, table(id, habitat)))
head(with(data, table(id, habitat)))
classify2(
data2, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
classify2(
data, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
rm(list = ls())
library(dewlap)
library(nmgc)
library(tidyverse)
library(cowplot)
data <- read.csv("data/reflectance.csv", header = TRUE)
variables <- paste0("PC", 1:4)
res <- classify(
data, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), digest = TRUE, test = TRUE, k = 5,
nrep = 100, seed = 24, method = "SVM", importance = TRUE
)
# Make sure that this script works with the new output of the classify function
# before changing the package further
classify2(
data, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
# Can we try classify2 on made-up data?
data2 <- data %>%
group_by(island) %>%
nest() %>%
mutate(data2 = map(data, ~ .x %>% mutate(id = sample(id)))) %>%
select(-data) %>%
unnest(cols = c(data2)) %>%
ungroup()
classify2(
data, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
classify2(
data, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
data %>%
group_by(island) %>%
nest() %>%
mutate(data = map(data, ~ .x %>% mutate(id = sample(id)))) %>%
select(-data) %>%
unnest(cols = c(data2)) %>%
ungroup()
# Can we try classify2 on made-up data?
data2 <- data %>%
group_by(island) %>%
nest() %>%
mutate(data = map(data, ~ .x %>% mutate(id = sample(id)))) %>%
unnest(cols = c(data)) %>%
ungroup()
data2
with(data, habitat[id == 1])
with(data, c(habitat[id == 1], island[id == 1]))
with(data, island[id == 1])
with(data, habitat[id == 1])
with(data, island[id == 1])
with(data2, habitat[id == 1])
with(data2, island[id == 1])
# Can we try classify2 on made-up data?
data2 <- data %>%
group_by(island) %>%
nest() %>%
mutate(data = map(data, ~ .x %>% mutate(habitat = sample(habitat)))) %>%
unnest(cols = c(data)) %>%
ungroup()
with(data, habitat[id == 1])
with(data, island[id == 1])
with(data2, habitat[id == 1])
with(data2, island[id == 1])
classify2(
data2, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
# Can we try classify2 on made-up data?
data2 <- data %>%
group_by(island) %>%
nest() %>%
mutate(data = map(data, ~ .x %>% mutate(habitat = sample(habitat)))) %>%
unnest(cols = c(data)) %>%
ungroup()
classify2(
data2, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 10, seed = 24, method = "SVM", importance = TRUE
)
classify2(
data2, variables, grouping = "habitat", nesting = "island",
to_pcomp = paste0("wl", 300:700), k = 5,
nrep = 100, seed = 24, method = "SVM", importance = TRUE
)
